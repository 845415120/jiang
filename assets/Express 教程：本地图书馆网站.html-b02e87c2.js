import{_ as o,r as p,o as r,c,b as n,d as s,e,a as t}from"./app-03f59e97.js";const i={},l=n("h1",{id:"本地图书馆",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#本地图书馆","aria-hidden":"true"},"#"),s(" 本地图书馆")],-1),u={href:"https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs/skeleton_website#%E6%96%87%E4%BB%B6%E6%94%B9%E5%8A%A8%E6%97%B6%E9%87%8D%E5%90%AF%E6%9C%8D%E5%8A%A1%E5%99%A8",target:"_blank",rel:"noopener noreferrer"},d={id:"使用应用生成器创建",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#使用应用生成器创建","aria-hidden":"true"},"#",-1),v={href:"https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs/skeleton_website#%E4%BD%BF%E7%94%A8%E5%BA%94%E7%94%A8%E7%94%9F%E6%88%90%E5%99%A8",target:"_blank",rel:"noopener noreferrer"},m=t(`<div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>npx express-generator

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文件改动时重启服务" tabindex="-1"><a class="header-anchor" href="#文件改动时重启服务" aria-hidden="true">#</a> 文件改动时重启服务</h2><p>安装nodemon</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>npm install <span class="token operator">-</span>g nodemon
npm install <span class="token operator">--</span><span class="token function">save-dev</span> nodemon
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>找到 package.json 的 scripts 部分。在 &quot;start&quot; 一行的末尾添加逗号，并在新的一行中添加 &quot;devstart&quot;，如下所示： JSONCopy to Clipboard</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node ./bin/www&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;devstart&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodemon ./bin/www&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动服务器：<code>npm run devstart</code></p><p>为网站设置具体路由</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> indexRouter<span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/users&#39;</span><span class="token punctuation">,</span> usersRouter<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,9),h={id:"视图-模板",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#视图-模板","aria-hidden":"true"},"#",-1),g={href:"https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs/skeleton_website#%E8%A7%86%E5%9B%BE%EF%BC%88%E6%A8%A1%E6%9D%BF%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},_={href:"http://expressjs.com/en/4x/api.html#res.render",target:"_blank",rel:"noopener noreferrer"},f=n("p",null,[s("数据库 "),n("img",{src:"https://cdn.nlark.com/yuque/0/2023/png/34220974/1688366255596-fe59784d-998a-428d-80df-916d8099022d.png#averageHue=%23f2f2f2&clientId=ue907690e-de83-4&from=paste&id=ucf0cce42&originHeight=620&originWidth=737&originalType=url&ratio=1.2200000286102295&rotation=0&showTitle=false&size=49042&status=done&style=none&taskId=u15e5ac02-28c9-4578-8bcf-92d46a0828c&title=",alt:"image.png"})],-1),y=n("h1",{id:"连接数据库",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#连接数据库","aria-hidden":"true"},"#"),s(" 连接数据库")],-1),E={id:"安装-mongoose",tabindex:"-1"},x=n("a",{class:"header-anchor",href:"#安装-mongoose","aria-hidden":"true"},"#",-1),B={href:"https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs/mongoose#%E5%AE%89%E8%A3%85_mongoose",target:"_blank",rel:"noopener noreferrer"},j=n("div",{class:"language-text line-numbers-mode","data-ext":"text"},[n("pre",{class:"language-text"},[n("code",null,`npm install mongoose
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),w={id:"连接到-mongodb",tabindex:"-1"},A=n("a",{class:"header-anchor",href:"#连接到-mongodb","aria-hidden":"true"},"#",-1),q={href:"https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs/mongoose#%E8%BF%9E%E6%8E%A5%E5%88%B0_mongodb_2",target:"_blank",rel:"noopener noreferrer"},N=t(`<p>打开 <strong>/app.js</strong>（位于项目根目录），并将以下代码复制到声明 Express 应用对象的位置（var app = express(); 之后）。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//连接MongoDB</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>

mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://127.0.0.1:27017&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">useNewUrlParser</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">useUnifiedTopology</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接数据库成功!&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Error connecting to the database&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建用户模型" tabindex="-1"><a class="header-anchor" href="#创建用户模型" aria-hidden="true">#</a> 创建用户模型</h2><p>/models</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//导入 mongoose</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
<span class="token comment">//创建文档的结构对象</span>
<span class="token comment">//设置集合中文档的属性以及属性值的类型</span>
<span class="token keyword">let</span> AccountSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 设置必填项</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> Date<span class="token punctuation">,</span>
    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">//  类型</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token comment">//默认值</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 金额</span>
  <span class="token literal-property property">account</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 备注</span>
  <span class="token literal-property property">remarks</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span>String<span class="token punctuation">,</span>
    
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//创建模型对象  对文档操作的封装对象</span>
<span class="token keyword">let</span> AccountModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;accounts&#39;</span><span class="token punctuation">,</span> AccountSchema<span class="token punctuation">)</span>

<span class="token comment">//暴露模型对象</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> AccountModel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),z={id:"populatedb-js",tabindex:"-1"},S=n("a",{class:"header-anchor",href:"#populatedb-js","aria-hidden":"true"},"#",-1),C={href:"https://raw.githubusercontent.com/mdn/express-locallibrary-tutorial/master/populatedb.js",target:"_blank",rel:"noopener noreferrer"},D=n("p",null,[n("img",{src:"https://cdn.nlark.com/yuque/0/2023/png/34220974/1688434578859-e4c55baf-8346-4800-b54f-ea544ad63c9c.png#averageHue=%23dbb377&clientId=u19525cb7-4662-4&from=paste&height=1076&id=uad92cb7e&originHeight=1313&originWidth=1006&originalType=binary&ratio=1.2200000286102295&rotation=0&showTitle=false&size=150650&status=done&style=none&taskId=ub6784daa-9d86-4116-b092-698ab55ac52&title=&width=824.5901445969563",alt:"image.png"})],-1),F={id:"创建路由",tabindex:"-1"},T=n("a",{class:"header-anchor",href:"#创建路由","aria-hidden":"true"},"#",-1),L={href:"https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs/routes#%E5%88%9B%E5%BB%BA%E8%B7%AF%E7%94%B1%E5%A4%84%E7%90%86%E5%99%A8%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0",target:"_blank",rel:"noopener noreferrer"},I=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// GET 请求主页</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">&#39;/catalog&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),M=n("strong",null,"备注：",-1),H={href:"https://expressjs.com/en/4x/api.html#res.redirect",target:"_blank",rel:"noopener noreferrer"},R=n("h1",{id:"创建模板呈现数据",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#创建模板呈现数据","aria-hidden":"true"},"#"),s(" 创建模板呈现数据")],-1);function V(W,P){const a=p("ExternalLinkIcon");return r(),c("div",null,[l,n("p",null,[n("a",u,[s("Express 教程 2：创建站点框架 - 学习 Web 开发 | MDN"),e(a)])]),n("h2",d,[k,s(),n("a",v,[s("使用应用生成器"),e(a)]),s("创建")]),m,n("h3",h,[b,s(),n("a",g,[s("视图（模板）"),e(a)])]),n("p",null,[n("a",_,[s("Response.render()"),e(a)]),s(" 方法用某对象的某个变量值一同来渲染一个特定的模板，然后将结果作为响应发送。")]),f,y,n("h2",E,[x,s(),n("a",B,[s("安装 Mongoose"),e(a)])]),j,n("h2",w,[A,s(),n("a",q,[s("连接到 MongoDB"),e(a)])]),N,n("h2",z,[S,s(),n("a",C,[s("populatedb.js"),e(a)])]),D,n("h2",F,[T,s(),n("a",L,[s("创建路由"),e(a)])]),I,n("p",null,[M,s(" 这是我们第一次使用 "),n("a",H,[s("redirect()"),e(a)]),s(" 响应方法。它会使路由重定向到指定的页面，默认发送 HTTP 状态代码“302 Found”。可以根据需要更改返回的状态代码、设置绝对或相对路径。")]),R])}const G=o(i,[["render",V],["__file","Express 教程：本地图书馆网站.html.vue"]]);export{G as default};
