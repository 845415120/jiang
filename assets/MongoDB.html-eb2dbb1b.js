import{_ as e,r as o,o as c,c as l,b as n,d as s,e as t,a as p}from"./app-03f59e97.js";const i={},u=p('<p><a name="vsb3G"></a></p><h1 id="mongodb" tabindex="-1"><a class="header-anchor" href="#mongodb" aria-hidden="true">#</a> MongoDB</h1><p>MongoDB 是一个基于分布式文件存储的数据库</p><p>操作语法与 JavaScript 类似，容易上手，学习成本低</p><p>Mongodb 中有三个重要概念需要掌握</p><ul><li>数据库（database） 数据库是一个数据仓库，数据库服务下可以创建很多数据库，数据库中可以存放很多集合</li><li>集合（collection） 集合类似于 JS 中的数组，在集合中可以存放很多文档</li><li>文档（document） 文档是数据库中的最小单位，类似于 JS 中的对象</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34220974/1687927977446-5da6d2de-df12-4d7c-aea1-7d68d656c87b.png#averageHue=%23ededed&amp;clientId=ude6276b7-61b8-4&amp;from=paste&amp;id=ubdbfdec7&amp;originHeight=682&amp;originWidth=1026&amp;originalType=url&amp;ratio=1.2200000286102295&amp;rotation=0&amp;showTitle=false&amp;size=280039&amp;status=done&amp;style=none&amp;taskId=u4f2898bf-b9c1-46e3-9979-cdcf33eb464&amp;title=" alt="image.png"><a name="Hoouv"></a></p><h2 id="下载安装与启动" tabindex="-1"><a class="header-anchor" href="#下载安装与启动" aria-hidden="true">#</a> <br>下载安装与启动</h2>',8),r={href:"https://gitee.com/link?target=https%3A%2F%2Fwww.mongodb.com%2Ftry%2Fdownload%2Fcommunity",target:"_blank",rel:"noopener noreferrer"},d=n("br",null,null,-1),k=n("br",null,null,-1),m=n("br",null,null,-1),v=n("br",null,null,-1),b=n("br",null,null,-1),g=n("br",null,null,-1),h=n("br",null,null,-1),y=n("img",{src:"https://cdn.nlark.com/yuque/0/2023/png/34220974/1687928867922-e87f3bd0-9043-420b-b6a2-99922c98f466.png#averageHue=%2332312b&clientId=ub5fb0524-0ae8-4&from=paste&id=ue8d25798&originHeight=638&originWidth=1743&originalType=url&ratio=1.2200000286102295&rotation=0&showTitle=false&size=1895879&status=done&style=none&taskId=u8c13cd23-b948-416b-a062-98d007d092a&title=",alt:"image.png"},null,-1),f=n("br",null,null,-1),w=n("br",null,null,-1),j=n("br",null,null,-1),x=n("img",{src:"https://cdn.nlark.com/yuque/0/2023/png/34220974/1687929091172-c5c18c20-cc9e-42f5-8c6d-e1e542b168f8.png#averageHue=%231b1b1b&clientId=ub5fb0524-0ae8-4&from=paste&height=520&id=u466909df&originHeight=635&originWidth=1129&originalType=binary&ratio=1.2200000286102295&rotation=0&showTitle=false&size=95610&status=done&style=none&taskId=u0136da6c-8249-474b-ab1d-6594ccda7b6&title=&width=925.409814363781",alt:"image.png"},null,-1),S=p(`<p><a name="foGGB"></a></p><h2 id="数据库命令" tabindex="-1"><a class="header-anchor" href="#数据库命令" aria-hidden="true">#</a> <br>数据库命令</h2><ol><li>显示所有的数据库</li></ol><p><code>show dbs</code></p><ol start="2"><li>切换到指定的数据库，如果数据库不存在会自动创建数据库</li></ol><p><code>use 数据库名</code></p><ol start="3"><li>显示当前所在的数据库</li></ol><p><code>db</code></p><ol start="4"><li>删除当前数据库</li></ol><p><code>use 库名</code><br><code>db.dropDatabase()</code></p><p><a name="tIIa1"></a></p><h3 id="集合命令" tabindex="-1"><a class="header-anchor" href="#集合命令" aria-hidden="true">#</a> 集合命令</h3><ol><li>创建集合<code>**db.createCollection(&#39;集合名称&#39;)**</code></li><li>显示当前数据库中的所有集合<code>**show collections**</code></li><li>删除某个集合<code>**db.集合名.drop()**</code></li><li>重命名集合<code>**db.集合名.renameCollection(&#39;newName&#39;)**</code><a name="hYC2h"></a></li></ol><h3 id="文档命令" tabindex="-1"><a class="header-anchor" href="#文档命令" aria-hidden="true">#</a> <br>文档命令</h3><ol><li>插入文档<code>**db.集合名.insert(文档对象);**</code></li><li>查询文档<code>**db.集合名.find(查询条件)**</code></li></ol><p>_id 是 mongodb 自动生成的唯一编号，用来唯一标识文档</p><ol start="3"><li>更新文档</li></ol><p><code>**db.集合名.update(查询条件,新的文档)**</code><br><code>** db.集合名.update({name:&#39;张三&#39;},{$set:{age:19}})**</code></p><ol start="4"><li>删除文档<code>**db.集合名.remove(查询条件)**</code></li></ol><p><a name="EeuT8"></a></p><h2 id="mongoose" tabindex="-1"><a class="header-anchor" href="#mongoose" aria-hidden="true">#</a> <br>Mongoose</h2><p>Mongoose是一个JavaScript面向对象的编程库，用于在MongoDB和Node.js JavaScript运行时环境之间创建连接 <a name="w2QJJ"></a></p><h3 id="安装-npm-i-mongoose" tabindex="-1"><a class="header-anchor" href="#安装-npm-i-mongoose" aria-hidden="true">#</a> 安装 <code>npm i mongoose</code></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//1. 安装 mongoose</span>
<span class="token comment">//2. 导入 mongoose</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
<span class="token comment">//3. 连接数据库                              数据库名称</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://127.0.0.1:27017/bilibili&#39;</span><span class="token punctuation">)</span>
<span class="token comment">//4.设置回调</span>
mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接成功&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接失败&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> 
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接关闭&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该代码使用了mongoose.connection.on(&#39;open&#39;, callback)方法来监听数据库的连接事件<br><code>mongoose.connection.on</code><br><code>mongoose.connection.once 只执行一次</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token comment">//1. 安装 mongoose</span>
 <span class="token comment">//2. 导入 mongoose</span>
 <span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token comment">//3. 连接数据库                              数据库名称</span>
 mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://127.0.0.1:27017/bilibili&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token comment">//4. 设置连接回调</span>
 <span class="token comment">//连接成功   once 一次   事件回调函数只执行一次</span>
mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 	<span class="token comment">//5. 创建文档结构对象</span>
    <span class="token comment">// 设置集合中 文档的属性以及属性值得类型</span>
 	<span class="token keyword">let</span> BookSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 		<span class="token literal-property property">title</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
 		<span class="token literal-property property">author</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
 		<span class="token literal-property property">price</span><span class="token operator">:</span> Number
 	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     
 	<span class="token comment">//6. 创建文档模型对象  对文档操作的封装对象  mongoose会使用集合名称的复数，创建集合</span>
 	<span class="token keyword">let</span> BookModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;book&#39;</span><span class="token punctuation">,</span> BookSchema<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
     <span class="token comment">//7. 插入文档</span>
 	BookModel<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 		<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;西游记&#39;</span><span class="token punctuation">,</span>
 		<span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;吴承恩&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">19.9</span>
 	<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 判断是否有错误</span>
 		<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
        <span class="token comment">//输出 data 对象  如果没有出错，则输出插入后的文档对象</span>
 		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
 		<span class="token comment">//8. 断开连接  关闭数据链接 (项目运行过程中，不会添加该代码)</span>
 		mongoose<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//连接出错</span>
mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接出错~~&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//连接关闭</span>
mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接关闭&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>mongoose会使用集合名称的复数，创建集合</code><br>book ---books <a name="nKWen"></a></p><h2 id="mongoose-schema" tabindex="-1"><a class="header-anchor" href="#mongoose-schema" aria-hidden="true">#</a> mongoose.Schema</h2><p><code>mongoose.Schema</code> 是 Mongoose 库中的一个类，用于定义 MongoDB 数据库中集合（Collections）的结构，也就是数据模型（Data Model）。通过定义 Schema，可以确定集合中每个文档（Document）的字段及其类型、验证规则、默认值等信息。</p><p>使用 <code>mongoose.Schema</code>，可以创建一个模式（Schema）对象，然后使用该模式对象来创建 Mongoose 模型（Model），从而进行数据的增删改查操作。</p><p>下面是一个简单的示例，展示了如何使用 <code>mongoose.Schema</code> 来定义一个用户数据模型：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 定义用户模式（Schema）</span>
<span class="token keyword">const</span> userSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">18</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">email</span><span class="token operator">:</span> String
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 创建用户模型（Model）</span>
<span class="token keyword">const</span> User <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;User&#39;</span><span class="token punctuation">,</span> userSchema<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 使用用户模型进行数据库操作</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的示例中，<code>mongoose.Schema</code> 被用来定义了一个包含 <code>name</code>、<code>age</code> 和 <code>email</code> 字段的用户模式。其中，<code>name</code> 是必需的，而 <code>age</code> 有一个默认值为 18。最后，通过 <code>mongoose.model()</code> 方法，将定义的模式转换为一个用户模型（User Model），可以通过该模型进行数据库的操作。</p><p>总结一下，<code>mongoose.Schema</code> 是 Mongoose 中用于定义 MongoDB 集合结构的类，通过定义模式对象，可以创建数据模型，从而实现对数据库的操作。 <a name="NWblP"></a></p><h2 id="使用用户模型进行数据库基本操作" tabindex="-1"><a class="header-anchor" href="#使用用户模型进行数据库基本操作" aria-hidden="true">#</a> 使用用户模型进行数据库基本操作</h2><p>使用用户模型进行数据库操作需要先连接到 MongoDB 数据库，然后可以使用用户模型进行数据的增删改查操作。以下是一些常见的数据库操作示例： <a name="yHOPp"></a></p><h3 id="连接到-mongodb-数据库" tabindex="-1"><a class="header-anchor" href="#连接到-mongodb-数据库" aria-hidden="true">#</a> 连接到 MongoDB 数据库：</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost/mydatabase&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">useNewUrlParser</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">useUnifiedTopology</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Connected to MongoDB&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Error connecting to MongoDB:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="KDrka"></a></p><h3 id="创建用户模型" tabindex="-1"><a class="header-anchor" href="#创建用户模型" aria-hidden="true">#</a> 创建用户模型：</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> userSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">18</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">email</span><span class="token operator">:</span> String
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> User <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;User&#39;</span><span class="token punctuation">,</span> userSchema<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//导入 mongoose</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
<span class="token comment">//创建文档的结构对象</span>
<span class="token comment">//设置集合中文档的属性以及属性值的类型</span>
<span class="token keyword">let</span> AccountSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 设置必填项</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> Date<span class="token punctuation">,</span>
    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">//  类型</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token comment">//默认值</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 金额</span>
  <span class="token literal-property property">account</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 备注</span>
  <span class="token literal-property property">remarks</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span>String<span class="token punctuation">,</span>
    
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//创建模型对象  对文档操作的封装对象</span>
<span class="token keyword">let</span> AccountModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;accounts&#39;</span><span class="token punctuation">,</span> AccountSchema<span class="token punctuation">)</span>

<span class="token comment">//暴露模型对象</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> AccountModel

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="akyo5"></a></p><h3 id="创建一个用户文档并保存到数据库" tabindex="-1"><a class="header-anchor" href="#创建一个用户文档并保存到数据库" aria-hidden="true">#</a> 创建一个用户文档并保存到数据库：</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;John Doe&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
  <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&#39;john@example.com&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

user<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;User saved successfully&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Error saving user:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="Fp7kP"></a></p><h3 id="查询所有用户" tabindex="-1"><a class="header-anchor" href="#查询所有用户" aria-hidden="true">#</a> 查询所有用户：</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>User<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">users</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;All users:&#39;</span><span class="token punctuation">,</span> users<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Error fetching users:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="RSREF"></a></p><h3 id="根据条件查询用户" tabindex="-1"><a class="header-anchor" href="#根据条件查询用户" aria-hidden="true">#</a> 根据条件查询用户：</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>User<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;John Doe&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;User found:&#39;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Error fetching user:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="FuYIx"></a></p><h3 id="更新用户信息" tabindex="-1"><a class="header-anchor" href="#更新用户信息" aria-hidden="true">#</a> 更新用户信息：</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>User<span class="token punctuation">.</span><span class="token function">findOneAndUpdate</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;John Doe&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;User updated successfully&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Error updating user:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="QYerd"></a></p><h3 id="删除用户" tabindex="-1"><a class="header-anchor" href="#删除用户" aria-hidden="true">#</a> 删除用户：</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>User<span class="token punctuation">.</span><span class="token function">findOneAndDelete</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;John Doe&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;User deleted successfully&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Error deleting user:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上是一些基本的数据库操作示例，你可以根据具体需求进行相应的操作。请确保在执行数据库操作之前已经成功连接到 MongoDB 数据库。 <a name="z0INr"></a></p><h2 id="字段类型" tabindex="-1"><a class="header-anchor" href="#字段类型" aria-hidden="true">#</a> <br>字段类型</h2><p>文档结构可选的常用字段类型列表</p><table><thead><tr><th><strong>类型</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>String</td><td>字符串</td></tr><tr><td>Number</td><td>数字</td></tr><tr><td>Boolean</td><td>布尔值</td></tr><tr><td>Array</td><td>数组，也可以使用 [] 来标识</td></tr><tr><td>Date</td><td>日期</td></tr><tr><td>Buffer</td><td>Buffer 对象</td></tr><tr><td>Mixed</td><td>任意类型，需要使用 mongoose.Schema.Types.Mixed 指定</td></tr><tr><td>ObjectId</td><td>对象 ID，需要使用 mongoose.Schema.Types.ObjectId 指定</td></tr><tr><td>Decimal128</td><td>高精度数字，需要使用 mongoose.Schema.Types.Decimal128 指定</td></tr></tbody></table><p><a name="BUNpF"></a></p><h3 id="字段值验证" tabindex="-1"><a class="header-anchor" href="#字段值验证" aria-hidden="true">#</a> <br>字段值验证</h3><p>Mongoose 有一些内建验证器，可以对字段值进行验证 <a name="Eh0y2"></a></p><h4 id="必填项" tabindex="-1"><a class="header-anchor" href="#必填项" aria-hidden="true">#</a> 必填项</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
 	<span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 设置必填项</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="lNgs4"></a></p><h4 id="默认值" tabindex="-1"><a class="header-anchor" href="#默认值" aria-hidden="true">#</a> 默认值</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token punctuation">{</span>
 	<span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
 	<span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;匿名&#39;</span> <span class="token comment">//默认值</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="rkElB"></a></p><h4 id="枚举值" tabindex="-1"><a class="header-anchor" href="#枚举值" aria-hidden="true">#</a> 枚举值</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
	<span class="token keyword">enum</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">]</span> <span class="token comment">//设置的值必须是数组中的</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="RW59X"></a></p><h4 id="唯一值" tabindex="-1"><a class="header-anchor" href="#唯一值" aria-hidden="true">#</a> 唯一值</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
 	<span class="token literal-property property">unique</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>unique 需要 重建集合 才能有效果<br>永远不要相信用户的输入 <a name="UMVhb"></a></p><h2 id="增删改查" tabindex="-1"><a class="header-anchor" href="#增删改查" aria-hidden="true">#</a> 增删改查</h2><p><a name="WXLAD"></a></p><h2 id="增加" tabindex="-1"><a class="header-anchor" href="#增加" aria-hidden="true">#</a> <br>增加</h2><p>插入一条<br>create</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>SongModel<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">&#39;给我一首歌的时间&#39;</span><span class="token punctuation">,</span>
 	<span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;Jay&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//错误</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//插入后的数据对象</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>批量插入<br>insertMany</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//1.引入mongoose</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//2.链接mongodb数据库 connect 连接</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://127.0.0.1:27017/project&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//3.设置连接的回调</span>
mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
	<span class="token comment">//4.声明文档结构</span>
	<span class="token keyword">const</span> PhoneSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
		<span class="token literal-property property">brand</span><span class="token operator">:</span>String<span class="token punctuation">,</span>
		<span class="token literal-property property">color</span><span class="token operator">:</span>String<span class="token punctuation">,</span>
		<span class="token literal-property property">price</span><span class="token operator">:</span>Number<span class="token punctuation">,</span>
 		<span class="token literal-property property">tags</span><span class="token operator">:</span>Array
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
 	<span class="token comment">//6.创建模型对象</span>
 	<span class="token keyword">const</span> PhoneModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;phone&#39;</span><span class="token punctuation">,</span>PhoneSchema<span class="token punctuation">)</span><span class="token punctuation">;</span>
 	PhoneModel<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
 		<span class="token punctuation">{</span>
 			<span class="token literal-property property">brand</span><span class="token operator">:</span><span class="token string">&#39;华为&#39;</span><span class="token punctuation">,</span>
 			<span class="token literal-property property">color</span><span class="token operator">:</span><span class="token string">&#39;灰色&#39;</span><span class="token punctuation">,</span>
 			<span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">2399</span><span class="token punctuation">,</span>
 			<span class="token literal-property property">tags</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;电量大&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;屏幕大&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;信号好&#39;</span><span class="token punctuation">]</span>
 		<span class="token punctuation">}</span><span class="token punctuation">,</span>
 		<span class="token punctuation">{</span>
 			<span class="token literal-property property">brand</span><span class="token operator">:</span><span class="token string">&#39;小米&#39;</span><span class="token punctuation">,</span>
 			<span class="token literal-property property">color</span><span class="token operator">:</span><span class="token string">&#39;白色&#39;</span><span class="token punctuation">,</span>
 			<span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">2099</span><span class="token punctuation">,</span>
 			<span class="token literal-property property">tags</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;电量大&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;屏幕大&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;信号好&#39;</span><span class="token punctuation">]</span>
         <span class="token punctuation">}</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;写入成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="qWV9z"></a></p><h2 id="删除" tabindex="-1"><a class="header-anchor" href="#删除" aria-hidden="true">#</a> <br>删除</h2><p>deleteOne<br>deleteMany</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//删除一条数据</span>
SongModel<span class="token punctuation">.</span><span class="token function">deleteOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token string">&#39;5dd65f32be6401035cb5b1ed&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
 	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;删除成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 批量删除</span>
SongModel<span class="token punctuation">.</span><span class="token function">deleteMany</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span><span class="token string">&#39;Jay&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
 	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;删除成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="vJWNM"></a></p><h2 id="更新" tabindex="-1"><a class="header-anchor" href="#更新" aria-hidden="true">#</a> <br>更新</h2><p>updateOne<br>updateMany</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>SongModel<span class="token punctuation">.</span><span class="token function">updateOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;JJ Lin&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;林俊杰&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
SongModel<span class="token punctuation">.</span><span class="token function">updateMany</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;Leehom Wang&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;王力宏&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="GSoAW"></a></p><h2 id="查询" tabindex="-1"><a class="header-anchor" href="#查询" aria-hidden="true">#</a> <br>查询</h2><p>findOne<br>find</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>SongModel<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;王力宏&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//不加条件查询</span>
SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//加条件查询</span>
SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;王力宏&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="PIu0p"></a></p><h1 id="条件控制" tabindex="-1"><a class="header-anchor" href="#条件控制" aria-hidden="true">#</a> <br>条件控制</h1><p><a name="GlNut"></a></p><h4 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符" aria-hidden="true">#</a> 运算符</h4><p>在 mongodb 不能 &gt; &lt; &gt;= &lt;= !== 等运算符，需要使用替代符号</p><ul><li><blockquote><p>使用 $gt</p></blockquote></li><li>&lt; 使用 $lt</li><li>= 使用 $gte</li><li>&lt;= 使用 $lte</li><li>!== 使用 $ne <a name="M21Jz"></a></li></ul><h4 id="逻辑运算" tabindex="-1"><a class="header-anchor" href="#逻辑运算" aria-hidden="true">#</a> <br>逻辑运算</h4><p>$or 逻辑或的情况<br>$and 逻辑与的情况 <a name="cVKJ9"></a></p><h4 id="正则匹配" tabindex="-1"><a class="header-anchor" href="#正则匹配" aria-hidden="true">#</a> <br>正则匹配</h4><p>条件中可以直接使用 JS 的正则语法，通过正则可以进行模糊查询<br><code>name: new RegExp(&#39;三&#39;)</code><a name="u7WSE"></a></p><h2 id="个性化读取" tabindex="-1"><a class="header-anchor" href="#个性化读取" aria-hidden="true">#</a> <br>个性化读取</h2><p><a name="jrHhP"></a></p><h4 id="字段筛选" tabindex="-1"><a class="header-anchor" href="#字段筛选" aria-hidden="true">#</a> <br>字段筛选</h4><p>select</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//0:不要的字段</span>
<span class="token comment">//1:要的字段</span>
SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="TmbVs"></a></p><h4 id="数据排序" tabindex="-1"><a class="header-anchor" href="#数据排序" aria-hidden="true">#</a> <br>数据排序</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// sort 排序</span>
<span class="token comment">// 1:升序</span>
<span class="token comment">// -1:倒序</span>
SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">hot</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="c8Vac"></a></p><h4 id="数据截取" tabindex="-1"><a class="header-anchor" href="#数据截取" aria-hidden="true">#</a> <br>数据截取</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//skip 跳过   limit 限定</span>
SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="oDJu7"></a></p><h2 id="图形化管理工具" tabindex="-1"><a class="header-anchor" href="#图形化管理工具" aria-hidden="true">#</a> <br>图形化管理工具</h2><p>我们可以使用图形化的管理工具来对 Mongodb 进行交互，这里演示两个图形化工具</p>`,120),_={href:"https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FStudio3T%2Frobomongo%2Freleases",target:"_blank",rel:"noopener noreferrer"},M={href:"https://gitee.com/link?target=https%3A%2F%2Fwww.navicat.com.cn%2F",target:"_blank",rel:"noopener noreferrer"};function D(B,q){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[s("下载地址： "),n("a",r,[s("https://www.mongodb.com/try/download/community"),t(a)]),d,s("建议选择 zip 类型， 通用性更强"),k,s("配置步骤如下:"),m,s("1> 将压缩包移动到 C:\\Program Files 下，然后解压"),v,s("2> 创建 C:\\data\\db 目录，mongodb 会将数据默认保存在这个文件夹"),b,s("3> 以 mongodb 中 bin 目录作为工作目录，启动命令行"),g,s("4> 运行命令 mongod"),h,y,f,s("看到最后的 waiting for connections 则表明服务 已经启动成功"),w,s("然后可以使用 mongo 命令连接本机的 mongodb 服务"),j,x]),S,n("ul",null,[n("li",null,[s("Robo 3T 免费 "),n("a",_,[s("https://github.com/Studio3T/robomongo/releases"),t(a)])]),n("li",null,[s("Navicat 收费 "),n("a",M,[s("https://www.navicat.com.cn/"),t(a)])])])])}const J=e(i,[["render",D],["__file","MongoDB.html.vue"]]);export{J as default};
